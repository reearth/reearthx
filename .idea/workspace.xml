<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="9ea77200-abc8-4d9a-b57a-952c6c32850f" name="Changes" comment="refactor(asset): rename integration variable for clarity and consistency in tests">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/LICENSE" beforeDir="false" afterPath="$PROJECT_DIR$/LICENSE" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/asset/usecase/interactor/asset.go" beforeDir="false" afterPath="$PROJECT_DIR$/asset/usecase/interactor/asset.go" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file://$USER_HOME$/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.24.2.darwin-arm64" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;customColor&quot;: &quot;&quot;,
  &quot;associatedIndex&quot;: 3
}</component>
  <component name="ProjectId" id="2xUFZLnQEH7vbDOW2qt2xsamcD5" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;DefaultGoTemplateProperty&quot;: &quot;Go File&quot;,
    &quot;Go Build.go build asset_file.go.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestBuilder_Build in github.com/reearth/reearthx/asset/domain/asset.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.TestNewFile in github.com/reearth/reearthx/asset/infrastructure/fs.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.asset_test.go (1).executor&quot;: &quot;Run&quot;,
    &quot;Go Test.asset_test.go.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.file_test.go.executor&quot;: &quot;Run&quot;,
    &quot;Go Test.go test asset.executor&quot;: &quot;Run&quot;,
    &quot;ModuleVcsDetector.initialDetectionPerformed&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.GoLinterPluginOnboarding&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.GoLinterPluginStorageMigration&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.formatter.settings.were.checked&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.migrated.go.modules.settings&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.modules.go.list.on.any.changes.was.set&quot;: &quot;true&quot;,
    &quot;git-widget-placeholder&quot;: &quot;asset/cms&quot;,
    &quot;go.import.settings.migrated&quot;: &quot;true&quot;,
    &quot;go.sdk.automatically.set&quot;: &quot;true&quot;,
    &quot;junie.onboarding.icon.badge.shown&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;/Users/xy/work/eukarya/reearthx&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;go.autoimport&quot;,
    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/asset/infrastructure" />
      <recent name="$PROJECT_DIR$/asset" />
      <recent name="$PROJECT_DIR$/asset/usecase" />
      <recent name="$PROJECT_DIR$/asset/domain" />
      <recent name="$PROJECT_DIR$/asset/usecase/repo" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/asset/usecase/repo" />
      <recent name="$PROJECT_DIR$/asset/domain/id" />
      <recent name="$PROJECT_DIR$/asset/domain" />
      <recent name="$PROJECT_DIR$/asset/domain/task" />
      <recent name="$PROJECT_DIR$/asset/domain/file" />
    </key>
  </component>
  <component name="RunManager" selected="Go Test.go test asset">
    <configuration name="go build asset_file.go" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="reearthx" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="FILE" />
      <package value="github.com/reearth/reearthx" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/asset/infrastructure/mongo/asset_file.go" />
      <method v="2" />
    </configuration>
    <configuration name="TestBuilder_Build in github.com/reearth/reearthx/asset/domain/asset" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="reearthx" />
      <working_directory value="$PROJECT_DIR$/asset/domain/asset" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/reearth/reearthx/asset/domain/asset" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestBuilder_Build\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestBuilder_Build in github.com/reearth/reearthx/asset/domain/asset" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="reearthx" />
      <working_directory value="$PROJECT_DIR$/asset/domain/asset" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/reearth/reearthx/asset/domain/asset" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestBuilder_Build\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestNewFile in github.com/reearth/reearthx/asset/infrastructure/fs" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="reearthx" />
      <working_directory value="$PROJECT_DIR$/asset/infrastructure/fs" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/reearth/reearthx/asset/infrastructure/fs" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestNewFile\E$" />
      <method v="2" />
    </configuration>
    <configuration name="asset_test.go (1)" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="reearthx" />
      <working_directory value="$PROJECT_DIR$/asset/infrastructure/mongo" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="FILE" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/asset/infrastructure/mongo/asset_test.go" />
      <framework value="gotest" />
      <method v="2" />
    </configuration>
    <configuration name="asset_test.go" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="reearthx" />
      <working_directory value="$PROJECT_DIR$/asset/domain/asset" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="FILE" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/asset/domain/asset/asset_test.go" />
      <framework value="gotest" />
      <method v="2" />
    </configuration>
    <configuration name="asset_test.go" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="reearthx" />
      <working_directory value="$PROJECT_DIR$/asset/domain/asset" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="FILE" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/asset/domain/asset/asset_test.go" />
      <framework value="gotest" />
      <method v="2" />
    </configuration>
    <configuration name="file_test.go" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="reearthx" />
      <working_directory value="$PROJECT_DIR$/asset/infrastructure/fs" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="FILE" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/asset/infrastructure/fs/file_test.go" />
      <framework value="gotest" />
      <method v="2" />
    </configuration>
    <configuration name="go test asset" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="reearthx" />
      <working_directory value="$PROJECT_DIR$/asset" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="DIRECTORY" />
      <package value="github.com/reearth/reearthx/asset" />
      <directory value="$PROJECT_DIR$/asset" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <method v="2" />
    </configuration>
    <configuration name="go test asset" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="reearthx" />
      <working_directory value="$PROJECT_DIR$/asset" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="DIRECTORY" />
      <package value="github.com/reearth/reearthx/asset" />
      <directory value="$PROJECT_DIR$/asset" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Go Test.go test asset" />
        <item itemvalue="Go Test.asset_test.go (1)" />
        <item itemvalue="Go Build.go build asset_file.go" />
        <item itemvalue="Go Test.TestBuilder_Build in github.com/reearth/reearthx/asset/domain/asset" />
        <item itemvalue="Go Test.asset_test.go" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-gosdk-3b128438d3f6-4b567d62c776-org.jetbrains.plugins.go.sharedIndexes.bundled-GO-251.26094.127" />
        <option value="bundled-js-predefined-d6986cc7102b-b26f3e71634d-JavaScript-GO-251.26094.127" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="9ea77200-abc8-4d9a-b57a-952c6c32850f" name="Changes" comment="" />
      <created>1748536620734</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1748536620734</updated>
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="refactor(asset): unify asset ID type and enhance asset repository interface" />
    <MESSAGE value="feat(asset): introduce asset interface and related types for asset management" />
    <MESSAGE value="refactor(asset): rename AssetSortType to SortType and update related usages for consistency" />
    <MESSAGE value="refactor(asset): rename asset package to file and update related references for clarity" />
    <MESSAGE value="refactor(asset): rename projectFilter to ProjectFilter and introduce WorkspaceFilter for improved clarity and functionality" />
    <MESSAGE value="refactor(asset): update upload test to use new ProjectID method for consistency" />
    <MESSAGE value="refactor(webhook): update import to use new asset event package for consistency" />
    <MESSAGE value="feat(thread): implement Thread and Comment structures with builder pattern and associated methods" />
    <MESSAGE value="feat(repo): add Event, Group, Request, and WorkspaceSettings interfaces for improved structure" />
    <MESSAGE value="chore: update Go modules to latest versions" />
    <MESSAGE value="refactor: update import paths to use reearthx package" />
    <MESSAGE value="feat(memory): implement memory-based repositories for asset management" />
    <MESSAGE value="feat(tests): add memory infrastructure imports to test files" />
    <MESSAGE value="refactor: update import paths for asset and file domains" />
    <MESSAGE value="feat(asset): enhance asset management with workspace filtering and import functionality" />
    <option name="LAST_COMMIT_MESSAGE" value="feat(asset): enhance asset management with workspace filtering and import functionality" />
  </component>
  <component name="VgoProject">
    <settings-migrated>true</settings-migrated>
  </component>
</project>