type User implements Node {
  id: ID!
  name: String!
  email: String!
  lang: Lang!
  theme: Theme!
  host: String
  workspace: ID!
  auths: [String!]!
  metadata: UserMetadata!
}

type Me {
  id: ID!
  name: String!
  email: String!
  lang: Lang!
  theme: Theme!
  host: String
  myWorkspaceId: ID!
  auths: [String!]!
  workspaces: [Workspace!]!
  myWorkspace: Workspace!
}

type UserMetadata {
  description: String
  website: String
  photoURL: String
  lang: Lang!
  theme: Theme!
}

input SignUpInput {
  id: ID!
  workspaceID: ID!
  name: String!
  email: String!
  password: String!
  secret: String
  lang: Lang
  theme: Theme
  mockAuth: Boolean
}

input SignupOIDCInput {
  name: String!
  email: String!
  sub: String!
  secret: String
}

input FindOrCreateInput {
  sub: String!
  iss: String!
  token: String!
}

input VerifyUserInput {
  code: String!
}

input CreateVerificationInput {
  email: String!
}

input StartPasswordResetInput {
  email: String!
}

input PasswordResetInput {
  password: String!
  token: String!
}

input UpdateMeInput {
  name: String
  email: String
  lang: Lang
  theme: Theme
  password: String
  passwordConfirmation: String
}

input RemoveMyAuthInput {
  auth: String!
}

input DeleteMeInput {
  userId: ID!
}

extend type Query {
  me: Me
  userByNameOrEmail(nameOrEmail: String!): User
  searchUser(keyword: String!): [User!]!
}

type UserPayload {
  user: User!
}

type UpdateMePayload {
  me: Me!
}

type DeleteMePayload {
  userId: ID!
}

extend type Mutation {
  updateMe(input: UpdateMeInput!): UpdateMePayload
  removeMyAuth(input: RemoveMyAuthInput!): UpdateMePayload
  deleteMe(input: DeleteMeInput!): DeleteMePayload
  signUp(input: SignUpInput!): UserPayload
  signUpOIDC(input: SignupOIDCInput!): UserPayload
  verifyUser(input: VerifyUserInput!): UserPayload
  findOrCreate(input: FindOrCreateInput!): UserPayload
  createVerification(input: CreateVerificationInput!): Boolean
  startPasswordReset(input: StartPasswordResetInput!): Boolean
  passwordReset(input: PasswordResetInput!): Boolean
}
